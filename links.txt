ng serve --open
npm run start:dev

https://developers.google.com/my-business/reference/businessinformation/rest/v1/accounts.locations/list

https://developers.google.com/my-business/content/location-data#filter_results_when_you_list_locations

###### Docker-compose build and deployment for Angular
https://blog.adamzolo.com/docker-compose-build-and-deployment-for-angular/

Get folders
//const mybusinessaccountmanagement = google.mybusinessaccountmanagement('v1');
//const ress = await mybusinessaccountmanagement.accounts.list({
//});
//console.log(ress.data);

// Get locations list
// const accountId = ress.data.accounts[2].name



sudo lsof -i :5000
kill -9 6807


https://www.npmjs.com/package/@googleapis/mybusinessaccountmanagement
https://googleapis.dev/nodejs/googleapis/latest/mybusinessaccountmanagement/classes/Resource$Locations.html
https://github.com/googleapis/google-api-nodejs-client/tree/main/src/apis/mybusinessaccountmanagement
https://googleapis.dev/nodejs/googleapis/latest/mybusinessaccountmanagement/classes/Mybusinessaccountmanagement.html

list of the accounts source code
https://googleapis.dev/nodejs/googleapis/latest/mybusinessaccountmanagement/classes/Resource$Accounts.html#list
https://developers.google.com/my-business/reference/accountmanagement/rest/v1/accounts.admins/list

auth helper

https://serveanswer.com/questions/google-api-no-access-refresh-token-api-key-or-refresh-handler-callback-is-set


https://stackoverflow.com/questions/70862741/google-api-no-access-refresh-token-api-key-or-refresh-handler-callback-is-set

###########

First, you would want to know which process is using port 3000

sudo lsof -i :3000
this will list all PID listening on this port, once you have the PID you can terminate it with the following:

kill -9 {PID}




#new

https://googleapis.dev/nodejs/googleapis/latest/mybusinessbusinessinformation/classes/Resource$Accounts$Locations.html#list


curl -X POST http://localhost:3000/auth/login -d '{"username": "john", "password": "changeme"}' -H "Content-Type: application/json"




Setup database
1
npm install --save @nestjs/sequelize sequelize sequelize-typescript
2
npm install --save pg pg-hstore
3
npm install --save-dev @types/sequelize


Links:
https://habr.com/ru/post/514380/


http://localhost:5000/auth/login?username=alex&password=15616


!!!
https://www.codemag.com/Article/2005051/NestJS-Step-by-Step-Connecting-NestJS-with-Angular-Part-4




// curl http://localhost:5000/profile -H "Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFsZXgiLCJzdWIiOjEsImlhdCI6MTY1MTcxMzI4OCwiZXhwIjoxNjUxNzEzMzQ4fQ.C0GqZLhuzGW2TouE4poiFKf0ZC1GpoOxpGGlidmoUJc"

https://github.com/IraErshova/angular-authorization















    // let locationDto = {
    //   'name': 'no name22',
    //   'gmbaccountId': 1,
    //   'languageCode':'no language code',
    //   'storeCode':'no store code',
    //   'title': 'no title',
    //   'primaryPhone': 'no primary phone',
    //   'additionalPhones':'no additional phones',
    //   'regionCode':'no region code',
    //   'administrativeArea': 'no administrative area',
    //   'postalCode': 'no postal code',
    //   'locality': 'no locality',
    //   'addressLines' :'no address lines',
    //   'websiteUri' :'no website url',
    //   'latlng':'no latlng',
    //   'mapsUri':'no maps uri'
    // };
    // this.locationService.getLocationByNameAndUpdate('no name',locationDto);
    //
    // return 1;













    async getLocations(oAuth2Client, locationService) {
        google.options({ auth: oAuth2Client });

        //const mybusinessaccountmanagement = google.mybusinessaccountmanagement('v1');
        //const ress = await mybusinessaccountmanagement.accounts.list({
        //});
        //console.log(ress.data);

        // Get locations list
        // const accountId = ress.data.accounts[2].name

        // Hardcode location ID
        let accountId = "accounts/112414412945354813426";
        // Setup
        const mybusinessbusinessinformation = google.mybusinessbusinessinformation("v1");
        // Get api key from env
        const apiKey = process.env.API_KEY;
        // Get locations
        const result = await mybusinessbusinessinformation.accounts.locations.list({
          parent: accountId,
          readMask: "name,languageCode,storeCode,title,phoneNumbers,categories,storefrontAddress,websiteUri,regularHours,specialHours,serviceArea,adWordsLocationExtensions,latlng,openInfo,metadata,profile,relationshipData,moreHours,serviceItems",
          pageSize: "2",
          key: apiKey
        });
