{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nlet LocationComponent = class LocationComponent {\n  constructor(authService, locationService) {\n    this.authService = authService;\n    this.locationService = locationService; // date = new FormControl(new Date());\n    // serializedDate = new FormControl(new Date().toISOString());\n    // Total number of locations\n\n    this.length = 100; // Show locations count per page\n\n    this.pageSize = 15; // Current page\n\n    this.pageIndex = 0; // \"Order by\" Field\n\n    this.orderField = 'count'; // Input text for search\n\n    this.searchString = ''; // Display only locations with changes\n\n    this.onlyChanges = false;\n    this.range = new FormGroup({\n      start: new FormControl(),\n      end: new FormControl()\n    });\n  }\n\n  ngOnInit() {\n    this.getLocations();\n  }\n  /**\n   * Get locations method from nest\n   */\n\n\n  getLocations() {\n    this.userSub = this.authService.user$.subscribe(user => {\n      this.user = user;\n      this.locationList = this.locationService.getLocationList({\n        'pageSize': this.pageSize,\n        'pageIndex': this.pageIndex,\n        'orderField': this.orderField,\n        'orderAsc': this.orderAsc == true ? 'asc' : 'desc',\n        'searchString': this.searchString,\n        'onlyChanges': this.onlyChanges\n      });\n      this.locCount = this.locationService.getLocCount({\n        'searchString': this.searchString,\n        'onlyChanges': this.onlyChanges\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n  /**\n   *\n   * @param event\n   */\n\n\n  handlePageEvent(event) {\n    // Change pagination params\n    this.length = event.length;\n    this.pageSize = event.pageSize;\n    this.pageIndex = event.pageIndex;\n    this.getLocations();\n  }\n\n  changeOrderField(field) {\n    this.orderField = field;\n    this.orderAsc = !this.orderAsc;\n    this.pageIndex = 0;\n    this.getLocations();\n  }\n\n  handleSearchEvent(event) {\n    this.searchString = event.target.value;\n    this.getLocations();\n  }\n\n  onlyChangesToogle(onlyChanges) {\n    this.onlyChanges = onlyChanges;\n    this.getLocations();\n  }\n\n};\nLocationComponent = __decorate([Component({\n  selector: \"app-profile\",\n  templateUrl: \"./location.component.html\",\n  styleUrls: [\"./location.component.css\"]\n})], LocationComponent);\nexport { LocationComponent };","map":null,"metadata":{},"sourceType":"module"}